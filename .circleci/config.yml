version: 2.1
# Use a package of configuration called an orb.
orbs:
  # Choose either one of the orbs below
  # Declare a dependency on the welcome-orb
  # welcome: circleci/welcome-orb@0.4.1
  aws-cli: circleci/aws-cli@2.0.3
# Orchestrate or schedule a set of jobs
commands:
   destroy_environment:
     steps:
       - run:
           name: Destroy environment
           when: on_fail
           command: |
             aws cloudformation delete-stack --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:7}
jobs:
  create_infrastructure: 
      docker:
        - image: amazon/aws-cli
      steps:
        - checkout
        - run:
            name: Install tar utility
            command: |
              yum install -y tar gzip
        - run:
            name: Create Cloudformation Stack
            command: |
              aws cloudformation deploy \
                --template-file template.yml \
                --stack-name myStack-${CIRCLE_WORKFLOW_ID:0:5} \
                --region us-east-1
        - run: echo "[all]" > ~/inventory.txt
        - run: echo "[all]" > ~/workspace-test.txt    
        - persist_to_workspace:
            root: ~/  
            paths:
              - inventory.txt
        - run:
            name: append IP to inventory
            command: |      
              aws ec2 describe-instances \
                --query 'Reservations[*].Instances[*].PublicIpAddress' \
                --filters "Name=tag:Project,Values=udacity" \
                --output text >> ~/inventory.txt
        - run:
            name: cat inventory
            command: | 
              cat ~/inventory.txt

#3asem
  configure_infrastructure: 
      docker:
        - image: python:3.7-alpine3.11
      steps:
        - checkout
        - add_ssh_keys:
            fingerprints: ["	58:66:06:90:9d:83:75:5e:e3:06:b2:ac:96:b8:7c:46"] 
        - run:
            name: Install Ansible
            command: |
              apk add --update ansible 
        - attach_workspace:
            at: ~/
        - run:
            name: cat inventory
            command: | 
              cat ~/inventory.txt
        - run:
            name: ls
            command: ls ~/
        - run:
            name: ls
            command: /root/project      
        - run:
            name: Run Playbook and Configure server
            command: | 
              ansible-playbook -i ~/inventory.txt main1.yml
        - run:
            name: Run Playbook and Configure server
            command: | 
              ansible-playbook -i ~/project/inventory.txt main1.yml            
           

  smoke_test:
      docker:
        - image: alpine:latest
      steps:
        - run: apk add --update curl
        - run:
           name: smoke test     
           command: |
              URL="https://blog.udacity.com/"
              if curl -s --head ${URL} 
              then
                return 0
              else
                return 1
              fi           
        - destroy_environment
workflows:
  project3tests:
    jobs:
      - create_infrastructure
      - configure_infrastructure:
          requires:
            - create_infrastructure
      - smoke_test:
          requires:
            - configure_infrastructure
